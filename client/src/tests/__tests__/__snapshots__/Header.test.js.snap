// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MockProvider>
    <Header
      classes={
        Object {
          "avatar": Object {
            "margin": 10,
          },
          "flex": Object {
            "flex": 1,
          },
          "root": Object {
            "flexGrow": 1,
            "textAlign": "left",
          },
        }
      }
    />
  </MockProvider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Header
        classes={
          Object {
            "avatar": Object {
              "margin": 10,
            },
            "flex": Object {
              "flex": 1,
            },
            "root": Object {
              "flexGrow": 1,
              "textAlign": "left",
            },
          }
        }
      />,
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "classes": Object {
          "avatar": Object {
            "margin": 10,
          },
          "flex": Object {
            "flex": 1,
          },
          "root": Object {
            "flexGrow": 1,
            "textAlign": "left",
          },
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Header
          classes={
            Object {
              "avatar": Object {
                "margin": 10,
              },
              "flex": Object {
                "flex": 1,
              },
              "root": Object {
                "flexGrow": 1,
                "textAlign": "left",
              },
            }
          }
        />,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "classes": Object {
            "avatar": Object {
              "margin": 10,
            },
            "flex": Object {
              "flex": 1,
            },
            "root": Object {
              "flexGrow": 1,
              "textAlign": "left",
            },
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

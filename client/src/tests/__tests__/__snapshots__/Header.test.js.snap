// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header handleMenu should set anchorEl to event.currentTarget 1`] = `
<div
  className={[Function]}
>
  <WithStyles(AppBar)
    position="static"
  >
    <WithStyles(Toolbar)>
      <IconButton
        aria-label="Book"
        className={[Function]}
        color="inherit"
        component={[Function]}
        to="/"
      >
        <pure(ImportContacts) />
      </IconButton>
      <Typography
        className={[Function]}
        color="inherit"
        variant="title"
      >
        Speedstudy
      </Typography>
      <div>
        <IconButton
          aria-haspopup="true"
          aria-owns="menu-appbar"
          color="inherit"
          onClick={[Function]}
        >
          <WithStyles(Avatar)
            alt="User Avatar"
          />
        </IconButton>
        <WithStyles(Menu)
          anchorEl={
            Object {
              "value": "<button tabindex=\\"0\\" class=\\"MuiButtonBase-root-47 MuiIconButton-root-41 MuiIconButton-colorInherit-42\\" type=\\"button\\" id=\\"avatar\\" aria-haspopup=\\"true\\" aria-owns=\\"menu-appbar\\"><span class=\\"MuiIconButton-label-46\\"><div class=\\"MuiAvatar-root-87\\"><img alt=\\"User Avatar\\" src=\\"https://avatars2.githubusercontent.com/u/14152877?v=4\\" class=\\"MuiAvatar-img-89\\"></div></span><span class=\\"MuiTouchRipple-root-56\\"></span></button>",
            }
          }
          anchorOrigin={
            Object {
              "horizontal": "right",
              "vertical": "top",
            }
          }
          id="menu-appbar"
          onClose={[Function]}
          open={true}
          transformOrigin={
            Object {
              "horizontal": "right",
              "vertical": "top",
            }
          }
        >
          <MenuItem>
            Logout
          </MenuItem>
          <MenuItem
            component={[Function]}
            to={
              Object {
                "pathname": "/undefined",
              }
            }
          >
            My Page
          </MenuItem>
        </WithStyles(Menu)>
      </div>
    </WithStyles(Toolbar)>
  </WithStyles(AppBar)>
</div>
`;

exports[`Header renders without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    classes={
      Object {
        "flex": [Function],
        "menuButton": [Function],
        "root": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <WithStyles(AppBar)
        position="static"
      >
        <WithStyles(Toolbar)>
          <IconButton
            aria-label="Book"
            className={[Function]}
            color="inherit"
            component={[Function]}
            to="/"
          >
            <pure(ImportContacts) />
          </IconButton>
          <Typography
            className={[Function]}
            color="inherit"
            variant="title"
          >
            Speedstudy
          </Typography>
          <div>
            <WithStyles(Button)
              color="inherit"
              onClick={[Function]}
            >
              Login With Github
            </WithStyles(Button)>
          </div>
        </WithStyles(Toolbar)>
      </WithStyles(AppBar)>,
      "className": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithStyles(Toolbar)>
          <IconButton
            aria-label="Book"
            className={[Function]}
            color="inherit"
            component={[Function]}
            to="/"
          >
            <pure(ImportContacts) />
          </IconButton>
          <Typography
            className={[Function]}
            color="inherit"
            variant="title"
          >
            Speedstudy
          </Typography>
          <div>
            <WithStyles(Button)
              color="inherit"
              onClick={[Function]}
            >
              Login With Github
            </WithStyles(Button)>
          </div>
        </WithStyles(Toolbar)>,
        "position": "static",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <IconButton
              aria-label="Book"
              className={[Function]}
              color="inherit"
              component={[Function]}
              to="/"
            >
              <pure(ImportContacts) />
            </IconButton>,
            <Typography
              className={[Function]}
              color="inherit"
              variant="title"
            >
              Speedstudy
            </Typography>,
            <div>
              <WithStyles(Button)
                color="inherit"
                onClick={[Function]}
              >
                Login With Github
              </WithStyles(Button)>
            </div>,
            undefined,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "aria-label": "Book",
              "children": <pure(ImportContacts) />,
              "className": [Function],
              "color": "inherit",
              "component": [Function],
              "to": "/",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Speedstudy",
              "className": [Function],
              "color": "inherit",
              "variant": "title",
            },
            "ref": null,
            "rendered": "Speedstudy",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <WithStyles(Button)
                color="inherit"
                onClick={[Function]}
              >
                Login With Github
              </WithStyles(Button)>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Login With Github",
                "color": "inherit",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Login With Github",
              "type": [Function],
            },
            "type": "div",
          },
          undefined,
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <WithStyles(AppBar)
          position="static"
        >
          <WithStyles(Toolbar)>
            <IconButton
              aria-label="Book"
              className={[Function]}
              color="inherit"
              component={[Function]}
              to="/"
            >
              <pure(ImportContacts) />
            </IconButton>
            <Typography
              className={[Function]}
              color="inherit"
              variant="title"
            >
              Speedstudy
            </Typography>
            <div>
              <WithStyles(Button)
                color="inherit"
                onClick={[Function]}
              >
                Login With Github
              </WithStyles(Button)>
            </div>
          </WithStyles(Toolbar)>
        </WithStyles(AppBar)>,
        "className": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithStyles(Toolbar)>
            <IconButton
              aria-label="Book"
              className={[Function]}
              color="inherit"
              component={[Function]}
              to="/"
            >
              <pure(ImportContacts) />
            </IconButton>
            <Typography
              className={[Function]}
              color="inherit"
              variant="title"
            >
              Speedstudy
            </Typography>
            <div>
              <WithStyles(Button)
                color="inherit"
                onClick={[Function]}
              >
                Login With Github
              </WithStyles(Button)>
            </div>
          </WithStyles(Toolbar)>,
          "position": "static",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <IconButton
                aria-label="Book"
                className={[Function]}
                color="inherit"
                component={[Function]}
                to="/"
              >
                <pure(ImportContacts) />
              </IconButton>,
              <Typography
                className={[Function]}
                color="inherit"
                variant="title"
              >
                Speedstudy
              </Typography>,
              <div>
                <WithStyles(Button)
                  color="inherit"
                  onClick={[Function]}
                >
                  Login With Github
                </WithStyles(Button)>
              </div>,
              undefined,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "aria-label": "Book",
                "children": <pure(ImportContacts) />,
                "className": [Function],
                "color": "inherit",
                "component": [Function],
                "to": "/",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Speedstudy",
                "className": [Function],
                "color": "inherit",
                "variant": "title",
              },
              "ref": null,
              "rendered": "Speedstudy",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <WithStyles(Button)
                  color="inherit"
                  onClick={[Function]}
                >
                  Login With Github
                </WithStyles(Button)>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Login With Github",
                  "color": "inherit",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Login With Github",
                "type": [Function],
              },
              "type": "div",
            },
            undefined,
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
